{"ast":null,"code":"var _jsxFileName = \"D:\\\\01-STUDY\\\\dev\\\\workspace\\\\workspace_react\\\\await\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  function test1() {\n    axios.get('test1').then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  // async가 붙으면 함수가 비동기방식으로 진행\n  async function test2() {\n    // await 명령어 사용 시 동기 방식으로 진행\n\n    try {\n      let cnt = '';\n      const res = await axios.get('/test1');\n      cnt = res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  function test3() {\n    console.log(1);\n    test2();\n    console.log(2);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: test1,\n      children: \"test1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: get,\n      children: \"test2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","axios","jsxDEV","_jsxDEV","App","test1","get","then","res","console","log","data","catch","error","test2","cnt","test3","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/01-STUDY/dev/workspace/workspace_react/await/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  function test1(){\n    axios.get('test1')\n    .then(res=>{console.log(res.data)})\n    .catch(error=>{console.log(error)})\n  }\n\n  // async가 붙으면 함수가 비동기방식으로 진행\n  async function test2(){\n    // await 명령어 사용 시 동기 방식으로 진행\n\n    try{\n      let cnt = '';\n      const res = await axios.get('/test1')\n      cnt = res.data\n    }catch(error){\n      console.log(error)\n    }\n  }\n\n  function test3(){\n    console.log(1)\n    test2()\n    console.log(2)\n  }\n\n  return (\n    <div className=\"App\">\n      <button type='button' onClick={test1}>test1</button>\n      <button type='button' onClick={get}>test2</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EACb,SAASC,KAAKA,CAAA,EAAE;IACdJ,KAAK,CAACK,GAAG,CAAC,OAAO,CAAC,CACjBC,IAAI,CAACC,GAAG,IAAE;MAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;IAAA,CAAC,CAAC,CAClCC,KAAK,CAACC,KAAK,IAAE;MAACJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IAAA,CAAC,CAAC;EACrC;;EAEA;EACA,eAAeC,KAAKA,CAAA,EAAE;IACpB;;IAEA,IAAG;MACD,IAAIC,GAAG,GAAG,EAAE;MACZ,MAAMP,GAAG,GAAG,MAAMP,KAAK,CAACK,GAAG,CAAC,QAAQ,CAAC;MACrCS,GAAG,GAAGP,GAAG,CAACG,IAAI;IAChB,CAAC,QAAME,KAAK,EAAC;MACXJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB;EACF;EAEA,SAASG,KAAKA,CAAA,EAAE;IACdP,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IACdI,KAAK,CAAC,CAAC;IACPL,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EAChB;EAEA,oBACEP,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEf,KAAM;MAAAa,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDrB,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEd,GAAI;MAAAY,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACC,EAAA,GAhCQrB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}